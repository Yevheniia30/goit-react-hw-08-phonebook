{"version":3,"file":"static/js/876.d49ba1a3.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from './ContactForm.module.css';\n// import { addContact } from 'redux/contacts/contactsActions';\n// import { addContact } from 'redux/contacts/contactsOperations';\nimport { contactsOperations } from 'redux/contacts';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const addedName = contacts.find(\n      item => item.name.toLowerCase() === name.toLowerCase()\n    );\n    const addedphone = contacts.find(item => item.phone === phone);\n\n    const contact = {\n      name,\n      number: phone,\n    };\n\n    addedName\n      ? alert(`${name} is already in contacts with phone ${addedName.phone}`)\n      : addedphone\n      ? alert(`${phone} is already in contacts as ${addedphone.name}`)\n      : !name || !phone\n      ? alert('Сomplete all fields')\n      : dispatch(contactsOperations.addContact(contact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          // required\n        />\n      </label>\n      <label className={s.label}>\n        phone\n        <input\n          className={s.input}\n          value={phone}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          // required\n        />\n      </label>\n      <button className={s.input + ' ' + s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"name\":\"ContactList_name__UCkFW\",\"item\":\"ContactList_item__EZYHO\",\"btn\":\"ContactList_btn__6Piat\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport {\n  // toggleContact,\n  deleteContact,\n} from 'redux/contacts/contactsOperations';\nimport s from './ContactList.module.css';\n// import { FaStar } from 'react-icons/fa';\n\nexport const ContactItem = ({ item }) => {\n  const dispatch = useDispatch();\n  // console.log('item', item);\n  return (\n    <li className={s.item}>\n      {/* <FaStar\n        fill={item?.isImportant ? '#f5d20d' : '#cecece'}\n        title=\"mark as important\"\n        cursor=\"pointer\"\n        onClick={() =>\n          dispatch(\n            toggleContact({ id: item.id, isImportant: !item.isImportant })\n          )\n        }\n      /> */}\n      <b className={s.name}>{item.name}</b>\n      <span>{item.number}</span>\n      <button\n        className={s.btn}\n        onClick={() => dispatch(deleteContact(item.id))}\n      >\n        Delete contact\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  item: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    // isImportant: PropTypes.bool,\n  }),\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport s from './ContactList.module.css';\nimport { contactsOperations } from 'redux/contacts';\nimport { ContactItem } from './ContactItem';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.contacts.filter);\n  const loading = useSelector(state => state.contacts.loading);\n  const error = useSelector(state => state.contacts.error);\n\n  console.log('error', error);\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContact());\n  }, [dispatch]);\n\n  const getFilteredContacts = () => {\n    if (!filter) {\n      return contacts;\n    } else {\n      const normalized = filter.toLowerCase();\n\n      return contacts.filter(item =>\n        item.name.toLowerCase().includes(normalized)\n      );\n    }\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <>\n      <ul className={s.list}>\n        {filteredContacts?.map(item => (\n          <ContactItem item={item} key={item.id} />\n        ))}\n      </ul>\n      {loading && <ThreeDots color=\"#00BFFF\" height={80} width={80} />}\n      {error && (\n        <p style={{ color: 'red' }}>Oops, something went wrong, try again</p>\n      )}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\"};","import s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\n// import { filterContact } from 'redux/contacts/contactsActions';\nimport { filterContact } from 'redux/contacts/contactsSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.contacts.filter);\n\n  const handleFilter = e => {\n    const { value } = e.currentTarget;\n    dispatch(filterContact(value));\n  };\n\n  return (\n    <label>\n      Search contact by name\n      <input\n        type=\"text\"\n        className={s.filter}\n        placeholder=\"Search contact...\"\n        value={filter}\n        onChange={handleFilter}\n      />\n    </label>\n  );\n};\n","import { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactForm","useState","name","setName","phone","setPhone","dispatch","useDispatch","contacts","useSelector","state","handleChange","e","currentTarget","value","reset","className","s","onSubmit","preventDefault","addedName","find","item","toLowerCase","addedphone","contact","number","alert","contactsOperations","addContact","onChange","type","pattern","title","ContactItem","onClick","deleteContact","id","ContactList","filter","loading","error","console","log","useEffect","getContact","filteredContacts","normalized","includes","getFilteredContacts","map","color","height","width","style","Filter","placeholder","filterContact"],"sourceRoot":""}