{"version":3,"file":"static/js/692.d5bb41dc.chunk.js","mappings":"mNACA,EAAuB,uBAAvB,EAAsD,wBAAtD,EAAsF,wBAAtF,EAAoH,sBAApH,EAAiJ,uB,6BCKpIA,EAAW,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC7BC,EAAeD,EACjB,CACEE,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZ,CAAED,MAAO,GAAIC,SAAU,IAC3B,GAAsCC,EAAAA,EAAAA,WAAS,UAC1CJ,IADL,eAAOK,EAAP,KAAoBC,EAApB,KAIQL,EAA0BI,EAA1BJ,KAAMC,EAAoBG,EAApBH,MAAOC,EAAaE,EAAbF,SAEfI,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAGdJ,GAAe,SAAAK,GAAI,yBACdA,GADc,cAEhBV,EAAOS,QAYZ,OACE,iCACE,kBAAME,UAAWC,EAAQf,SAVR,SAAAU,GACnBA,EAAEM,iBACFhB,EAASO,GACTC,GAAe,UACVN,KAMH,UACGD,IACC,mBAAOa,UAAWC,EAAlB,kBAEE,kBACED,UAAWC,EACXH,MAAOT,EACPc,SAAUR,EACVS,KAAK,OACLf,KAAK,OACLgB,QAAQ,yHACRC,MAAM,+IAMZ,mBAAON,UAAWC,EAAlB,mBAEE,kBACED,UAAWC,EACXH,MAAOR,EACPa,SAAUR,EACVS,KAAK,QACLf,KAAK,cAMT,mBAAOW,UAAWC,EAAlB,sBAEE,kBACED,UAAWC,EACXH,MAAOP,EACPY,SAAUR,EACVS,KAAK,WACLf,KAAK,iBAMT,mBAAQW,UAAWC,EAAU,IAAMA,EAAOG,KAAK,SAA/C,SACGjB,EAAW,UAAY,eAG5B,SAAC,KAAD,CAAMoB,GAAIpB,EAAWqB,EAAAA,EAAAA,MAAeA,EAAAA,EAAAA,OAAeR,UAAWC,EAA9D,SACGd,EACG,kCACA,6C,6GC7EZ,EAVmB,WACjB,IAAMsB,GAAWC,EAAAA,EAAAA,MAMjB,OAAO,SAACzB,EAAA,EAAD,CAAUE,UAAU,EAAMD,SALZ,SAAAyB,GAEnBF,GAASG,EAAAA,EAAAA,IAAOD","sources":["webpack://react-homework-template/./src/components/UserForm/UserForm.module.css?24f4","components/UserForm/UserForm.jsx","pages/SignupPage/SignupPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"UserForm_form__Rtz4A\",\"label\":\"UserForm_label__z5eKj\",\"input\":\"UserForm_input__qGgJS\",\"btn\":\"UserForm_btn__nHAb1\",\"link\":\"UserForm_link__2g4OR\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport s from './UserForm.module.css';\nimport { routes } from 'routes';\nimport { Link } from 'react-router-dom';\n\nexport const UserForm = ({ onSubmit, isSignup }) => {\n  const initialState = isSignup\n    ? {\n        name: '',\n        email: '',\n        password: '',\n      }\n    : { email: '', password: '' };\n  const [credentials, setCredentials] = useState({\n    ...initialState,\n  });\n\n  const { name, email, password } = credentials;\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    // console.log(name, value);\n\n    setCredentials(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(credentials);\n    setCredentials({\n      ...initialState,\n    });\n  };\n\n  return (\n    <>\n      <form className={s.form} onSubmit={handleSubmit}>\n        {isSignup && (\n          <label className={s.label}>\n            Name\n            <input\n              className={s.input}\n              value={name}\n              onChange={handleChange}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              // required\n            />\n          </label>\n        )}\n\n        <label className={s.label}>\n          Email\n          <input\n            className={s.input}\n            value={email}\n            onChange={handleChange}\n            type=\"email\"\n            name=\"email\"\n            //   pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            //   title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            // required\n          />\n        </label>\n        <label className={s.label}>\n          Password\n          <input\n            className={s.input}\n            value={password}\n            onChange={handleChange}\n            type=\"password\"\n            name=\"password\"\n            //   pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            //   title=\"Password  must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            // required\n          />\n        </label>\n        <button className={s.input + ' ' + s.btn} type=\"submit\">\n          {isSignup ? 'Sign up' : 'Log In'}\n        </button>\n      </form>\n      <Link to={isSignup ? routes.login : routes.signup} className={s.link}>\n        {isSignup\n          ? 'Already have an account? Log in'\n          : 'Do not have an account yet? Sign up'}\n      </Link>\n    </>\n  );\n};\n\nUserForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  isSignup: PropTypes.bool,\n};\n","import { useDispatch } from 'react-redux';\nimport { signup } from 'redux/auth/authOperations';\nimport { UserForm } from 'components/UserForm';\nconst SignupPage = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = user => {\n    // console.log('user', user);\n    dispatch(signup(user));\n  };\n\n  return <UserForm isSignup={true} onSubmit={handleSubmit} />;\n};\n\nexport default SignupPage;\n"],"names":["UserForm","onSubmit","isSignup","initialState","name","email","password","useState","credentials","setCredentials","handleChange","e","target","value","prev","className","s","preventDefault","onChange","type","pattern","title","to","routes","dispatch","useDispatch","user","signup"],"sourceRoot":""}